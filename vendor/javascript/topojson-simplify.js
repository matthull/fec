// topojson-simplify@3.0.2 downloaded from https://ga.jspm.io/npm:topojson-simplify@3.0.2/dist/topojson-simplify.js

import r from"topojson-client";var e={};(function(n,t){t(e,r)})(e,(function(r,e){var prune=function(r){var e=r.objects,n={},t=r.arcs,a=t.length,i=-1,o=new Array(a),c=0,l,u=-1,s;function scanGeometry(r){switch(r.type){case"GeometryCollection":r.geometries.forEach(scanGeometry);break;case"LineString":scanArcs(r.arcs);break;case"MultiLineString":r.arcs.forEach(scanArcs);break;case"Polygon":r.arcs.forEach(scanArcs);break;case"MultiPolygon":r.arcs.forEach(scanMultiArcs);break}}function scanArc(r){r<0&&(r=~r);o[r]||(o[r]=1,++c)}function scanArcs(r){r.forEach(scanArc)}function scanMultiArcs(r){r.forEach(scanArcs)}function reindexGeometry(r){var e;switch(r.type){case"GeometryCollection":e={type:"GeometryCollection",geometries:r.geometries.map(reindexGeometry)};break;case"LineString":e={type:"LineString",arcs:reindexArcs(r.arcs)};break;case"MultiLineString":e={type:"MultiLineString",arcs:r.arcs.map(reindexArcs)};break;case"Polygon":e={type:"Polygon",arcs:r.arcs.map(reindexArcs)};break;case"MultiPolygon":e={type:"MultiPolygon",arcs:r.arcs.map(reindexMultiArcs)};break;default:return r}null!=r.id&&(e.id=r.id);null!=r.bbox&&(e.bbox=r.bbox);null!=r.properties&&(e.properties=r.properties);return e}function reindexArc(r){return r<0?~o[~r]:o[r]}function reindexArcs(r){return r.map(reindexArc)}function reindexMultiArcs(r){return r.map(reindexArcs)}for(s in e)scanGeometry(e[s]);l=new Array(c);while(++i<a)if(o[i]){o[i]=++u;l[u]=t[i]}for(s in e)n[s]=reindexGeometry(e[s]);return{type:"Topology",bbox:r.bbox,transform:r.transform,objects:n,arcs:l}};var filter=function(r,e){var n=r.objects,t={},a;null==e&&(e=filterTrue);function filterGeometry(r){var e,n;switch(r.type){case"Polygon":n=filterRings(r.arcs);e=n?{type:"Polygon",arcs:n}:{type:null};break;case"MultiPolygon":n=r.arcs.map(filterRings).filter(filterIdentity);e=n.length?{type:"MultiPolygon",arcs:n}:{type:null};break;case"GeometryCollection":n=r.geometries.map(filterGeometry).filter(filterNotNull);e=n.length?{type:"GeometryCollection",geometries:n}:{type:null};break;default:return r}null!=r.id&&(e.id=r.id);null!=r.bbox&&(e.bbox=r.bbox);null!=r.properties&&(e.properties=r.properties);return e}function filterRings(r){return r.length&&filterExteriorRing(r[0])?[r[0]].concat(r.slice(1).filter(filterInteriorRing)):null}function filterExteriorRing(r){return e(r,false)}function filterInteriorRing(r){return e(r,true)}for(a in n)t[a]=filterGeometry(n[a]);return prune({type:"Topology",bbox:r.bbox,transform:r.transform,objects:t,arcs:r.arcs})};function filterTrue(){return true}function filterIdentity(r){return r}function filterNotNull(r){return null!=r.type}var filterAttached=function(r){var e=new Array(r.arcs.length),n=0,t;function testGeometry(r){switch(r.type){case"GeometryCollection":r.geometries.forEach(testGeometry);break;case"Polygon":testArcs(r.arcs);break;case"MultiPolygon":r.arcs.forEach(testArcs);break}}function testArcs(r){for(var t=0,a=r.length;t<a;++t,++n)for(var i=r[t],o=0,c=i.length;o<c;++o){var l=i[o];l<0&&(l=~l);var u=e[l];null==u?e[l]=n:u!==n&&(e[l]=-1)}}for(t in r.objects)testGeometry(r.objects[t]);return function(r){for(var n=0,t=r.length,a;n<t;++n)if(-1===e[(a=r[n])<0?~a:a])return true;return false}};function planarTriangleArea(r){var e=r[0],n=r[1],t=r[2];return Math.abs((e[0]-t[0])*(n[1]-e[1])-(e[0]-n[0])*(t[1]-e[1]))/2}function planarRingArea(r){var e=-1,n=r.length,t,a=r[n-1],i=0;while(++e<n)t=a,a=r[e],i+=t[0]*a[1]-t[1]*a[0];return Math.abs(i)/2}var filterWeight=function(r,n,t){n=null==n?Number.MIN_VALUE:+n;null==t&&(t=planarRingArea);return function(a,i){return t(e.feature(r,{type:"Polygon",arcs:[a]}).geometry.coordinates[0],i)>=n}};var filterAttachedWeight=function(r,e,n){var t=filterAttached(r),a=filterWeight(r,e,n);return function(r,e){return t(r,e)||a(r,e)}};function compare(r,e){return r[1][2]-e[1][2]}var newHeap=function(){var r={},e=[],n=0;r.push=function(r){up(e[r._=n]=r,n++);return n};r.pop=function(){if(!(n<=0)){var r=e[0],t;--n>0&&(t=e[n],down(e[t._=0]=t,0));return r}};r.remove=function(r){var t=r._,a;if(e[t]===r){t!==--n&&(a=e[n],(compare(a,r)<0?up:down)(e[a._=t]=a,t));return t}};function up(r,n){while(n>0){var t=(n+1>>1)-1,a=e[t];if(compare(r,a)>=0)break;e[a._=n]=a;e[r._=n=t]=r}}function down(r,t){while(true){var a=t+1<<1,i=a-1,o=t,c=e[o];i<n&&compare(e[i],c)<0&&(c=e[o=i]);a<n&&compare(e[a],c)<0&&(c=e[o=a]);if(o===t)break;e[c._=t]=c;e[r._=t=o]=r}}return r};function copy(r){return[r[0],r[1],0]}var presimplify=function(r,n){var t=r.transform?e.transform(r.transform):copy,a=newHeap();null==n&&(n=planarTriangleArea);var i=r.arcs.map((function(r){var e=[],i=0,o,c,l;r=r.map(t);for(c=1,l=r.length-1;c<l;++c){o=[r[c-1],r[c],r[c+1]];o[1][2]=n(o);e.push(o);a.push(o)}r[0][2]=r[l][2]=Infinity;for(c=0,l=e.length;c<l;++c){o=e[c];o.previous=e[c-1];o.next=e[c+1]}while(o=a.pop()){var u=o.previous,s=o.next;o[1][2]<i?o[1][2]=i:i=o[1][2];if(u){u.next=s;u[2]=o[2];update(u)}if(s){s.previous=u;s[0]=o[0];update(s)}}return r}));function update(r){a.remove(r);r[1][2]=n(r);a.push(r)}return{type:"Topology",bbox:r.bbox,objects:r.objects,arcs:i}};var quantile=function(r,e){var n=[];r.arcs.forEach((function(r){r.forEach((function(r){isFinite(r[2])&&n.push(r[2])}))}));return n.length&&quantile$1(n.sort(descending),e)};function quantile$1(r,e){if(n=r.length){if((e=+e)<=0||n<2)return r[0];if(e>=1)return r[n-1];var n,t=(n-1)*e,a=Math.floor(t),i=r[a],o=r[a+1];return i+(o-i)*(t-a)}}function descending(r,e){return e-r}var simplify=function(r,e){e=null==e?Number.MIN_VALUE:+e;var n=r.arcs.map((function(r){var n=-1,t=0,a=r.length,i=new Array(a),o;while(++n<a)(o=r[n])[2]>=e&&(i[t++]=[o[0],o[1]]);i.length=t;return i}));return{type:"Topology",transform:r.transform,bbox:r.bbox,objects:r.objects,arcs:n}};var n=Math.PI;var t=2*n;var a=n/4;var i=n/180;var o=Math.abs;var c=Math.atan2;var l=Math.cos;var u=Math.sin;function halfArea(r,e){var n=0,t=r.length,o=0,s=r[e?n++:t-1],f,p=s[0]*i,g=s[1]*i/2+a,y,h=l(g),b,m=u(g);for(;n<t;++n){s=r[n];f=p,p=s[0]*i;g=s[1]*i/2+a;y=h,h=l(g);b=m,m=u(g);var v=p-f,A=v>=0?1:-1,d=A*v,x=b*m,M=y*h+x*l(d),k=x*A*u(d);o+=c(k,M)}return o}function sphericalRingArea(r,e){var n=halfArea(r,true);e&&(n*=-1);return 2*(n<0?t+n:n)}function sphericalTriangleArea(r){return 2*o(halfArea(r,false))}r.filter=filter;r.filterAttached=filterAttached;r.filterAttachedWeight=filterAttachedWeight;r.filterWeight=filterWeight;r.planarRingArea=planarRingArea;r.planarTriangleArea=planarTriangleArea;r.presimplify=presimplify;r.quantile=quantile;r.simplify=simplify;r.sphericalRingArea=sphericalRingArea;r.sphericalTriangleArea=sphericalTriangleArea;Object.defineProperty(r,"__esModule",{value:true})}));const n=e.filter,t=e.filterAttached,a=e.filterAttachedWeight,i=e.filterWeight,o=e.planarRingArea,c=e.planarTriangleArea,l=e.presimplify,u=e.quantile,s=e.simplify,f=e.sphericalRingArea,p=e.sphericalTriangleArea,g=e.__esModule;export default e;export{g as __esModule,n as filter,t as filterAttached,a as filterAttachedWeight,i as filterWeight,o as planarRingArea,c as planarTriangleArea,l as presimplify,u as quantile,s as simplify,f as sphericalRingArea,p as sphericalTriangleArea};

