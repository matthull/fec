// topojson-client@3.0.0 downloaded from https://ga.jspm.io/npm:topojson-client@3.0.0/dist/topojson-client.js

var e="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:global;var r={};(function(e,t){t(r)})(r,(function(r){var identity=function(e){return e};var transform=function(e){if(null==e)return identity;var r,t,n=e.scale[0],o=e.scale[1],a=e.translate[0],i=e.translate[1];return function(e,c){c||(r=t=0);var u=2,s=e.length,l=new Array(s);l[0]=(r+=e[0])*n+a;l[1]=(t+=e[1])*o+i;while(u<s)l[u]=e[u],++u;return l}};var bbox=function(e){var r=transform(e.transform),t,n=Infinity,o=n,a=-n,i=-n;function bboxPoint(e){e=r(e);e[0]<n&&(n=e[0]);e[0]>a&&(a=e[0]);e[1]<o&&(o=e[1]);e[1]>i&&(i=e[1])}function bboxGeometry(e){switch(e.type){case"GeometryCollection":e.geometries.forEach(bboxGeometry);break;case"Point":bboxPoint(e.coordinates);break;case"MultiPoint":e.coordinates.forEach(bboxPoint);break}}e.arcs.forEach((function(e){var t=-1,c=e.length,u;while(++t<c){u=r(e[t],t);u[0]<n&&(n=u[0]);u[0]>a&&(a=u[0]);u[1]<o&&(o=u[1]);u[1]>i&&(i=u[1])}}));for(t in e.objects)bboxGeometry(e.objects[t]);return[n,o,a,i]};var reverse=function(e,r){var t,n=e.length,o=n-r;while(o<--n)t=e[o],e[o++]=e[n],e[n]=t};var feature=function(e,r){return"GeometryCollection"===r.type?{type:"FeatureCollection",features:r.geometries.map((function(r){return feature$1(e,r)}))}:feature$1(e,r)};function feature$1(e,r){var t=r.id,n=r.bbox,o=null==r.properties?{}:r.properties,a=object(e,r);return null==t&&null==n?{type:"Feature",properties:o,geometry:a}:null==n?{type:"Feature",id:t,properties:o,geometry:a}:{type:"Feature",id:t,bbox:n,properties:o,geometry:a}}function object(e,r){var t=transform(e.transform),n=e.arcs;function arc(e,r){r.length&&r.pop();for(var o=n[e<0?~e:e],a=0,i=o.length;a<i;++a)r.push(t(o[a],a));e<0&&reverse(r,i)}function point(e){return t(e)}function line(e){var r=[];for(var t=0,n=e.length;t<n;++t)arc(e[t],r);r.length<2&&r.push(r[0]);return r}function ring(e){var r=line(e);while(r.length<4)r.push(r[0]);return r}function polygon(e){return e.map(ring)}function geometry(e){var r=e.type,t;switch(r){case"GeometryCollection":return{type:r,geometries:e.geometries.map(geometry)};case"Point":t=point(e.coordinates);break;case"MultiPoint":t=e.coordinates.map(point);break;case"LineString":t=line(e.arcs);break;case"MultiLineString":t=e.arcs.map(line);break;case"Polygon":t=polygon(e.arcs);break;case"MultiPolygon":t=e.arcs.map(polygon);break;default:return null}return{type:r,coordinates:t}}return geometry(r)}var stitch=function(e,r){var t={},n={},o={},a=[],i=-1;r.forEach((function(t,n){var o=e.arcs[t<0?~t:t],a;o.length<3&&!o[1][0]&&!o[1][1]&&(a=r[++i],r[i]=t,r[n]=a)}));r.forEach((function(e){var r=ends(e),t=r[0],a=r[1],i,c;if(i=o[t]){delete o[i.end];i.push(e);i.end=a;if(c=n[a]){delete n[c.start];var u=c===i?i:i.concat(c);n[u.start=i.start]=o[u.end=c.end]=u}else n[i.start]=o[i.end]=i}else if(i=n[a]){delete n[i.start];i.unshift(e);i.start=t;if(c=o[t]){delete o[c.end];var s=c===i?i:c.concat(i);n[s.start=c.start]=o[s.end=i.end]=s}else n[i.start]=o[i.end]=i}else{i=[e];n[i.start=t]=o[i.end=a]=i}}));function ends(r){var t=e.arcs[r<0?~r:r],n=t[0],o;e.transform?(o=[0,0],t.forEach((function(e){o[0]+=e[0],o[1]+=e[1]}))):o=t[t.length-1];return r<0?[o,n]:[n,o]}function flush(e,r){for(var n in e){var o=e[n];delete r[o.start];delete o.start;delete o.end;o.forEach((function(e){t[e<0?~e:e]=1}));a.push(o)}}flush(o,n);flush(n,o);r.forEach((function(e){t[e<0?~e:e]||a.push([e])}));return a};var mesh=function(r){return object(r,meshArcs.apply(this||e,arguments))};function meshArcs(e,r,t){var n,o,a;if(arguments.length>1)n=extractArcs(e,r,t);else for(o=0,n=new Array(a=e.arcs.length);o<a;++o)n[o]=o;return{type:"MultiLineString",arcs:stitch(e,n)}}function extractArcs(e,r,t){var n=[],o=[],a;function extract0(e){var r=e<0?~e:e;(o[r]||(o[r]=[])).push({i:e,g:a})}function extract1(e){e.forEach(extract0)}function extract2(e){e.forEach(extract1)}function extract3(e){e.forEach(extract2)}function geometry(e){switch(a=e,e.type){case"GeometryCollection":e.geometries.forEach(geometry);break;case"LineString":extract1(e.arcs);break;case"MultiLineString":case"Polygon":extract2(e.arcs);break;case"MultiPolygon":extract3(e.arcs);break}}geometry(r);o.forEach(null==t?function(e){n.push(e[0].i)}:function(e){t(e[0].g,e[e.length-1].g)&&n.push(e[0].i)});return n}function planarRingArea(e){var r=-1,t=e.length,n,o=e[t-1],a=0;while(++r<t)n=o,o=e[r],a+=n[0]*o[1]-n[1]*o[0];return Math.abs(a)}var merge=function(r){return object(r,mergeArcs.apply(this||e,arguments))};function mergeArcs(e,r){var t={},n=[],o=[];r.forEach(geometry);function geometry(e){switch(e.type){case"GeometryCollection":e.geometries.forEach(geometry);break;case"Polygon":extract(e.arcs);break;case"MultiPolygon":e.arcs.forEach(extract);break}}function extract(e){e.forEach((function(r){r.forEach((function(r){(t[r=r<0?~r:r]||(t[r]=[])).push(e)}))}));n.push(e)}function area(r){return planarRingArea(object(e,{type:"Polygon",arcs:[r]}).coordinates[0])}n.forEach((function(e){if(!e._){var r=[],n=[e];e._=1;o.push(r);while(e=n.pop()){r.push(e);e.forEach((function(e){e.forEach((function(e){t[e<0?~e:e].forEach((function(e){if(!e._){e._=1;n.push(e)}}))}))}))}}}));n.forEach((function(e){delete e._}));return{type:"MultiPolygon",arcs:o.map((function(r){var n=[],o;r.forEach((function(e){e.forEach((function(e){e.forEach((function(e){t[e<0?~e:e].length<2&&n.push(e)}))}))}));n=stitch(e,n);if((o=n.length)>1)for(var a=1,i=area(n[0]),c,u;a<o;++a)(c=area(n[a]))>i&&(u=n[0],n[0]=n[a],n[a]=u,i=c);return n}))}}var bisect=function(e,r){var t=0,n=e.length;while(t<n){var o=t+n>>>1;e[o]<r?t=o+1:n=o}return t};var neighbors=function(e){var r={},t=e.map((function(){return[]}));function line(e,t){e.forEach((function(e){e<0&&(e=~e);var n=r[e];n?n.push(t):r[e]=[t]}))}function polygon(e,r){e.forEach((function(e){line(e,r)}))}function geometry(e,r){"GeometryCollection"===e.type?e.geometries.forEach((function(e){geometry(e,r)})):e.type in n&&n[e.type](e.arcs,r)}var n={LineString:line,MultiLineString:polygon,Polygon:polygon,MultiPolygon:function(e,r){e.forEach((function(e){polygon(e,r)}))}};e.forEach(geometry);for(var o in r)for(var a=r[o],i=a.length,c=0;c<i;++c)for(var u=c+1;u<i;++u){var s=a[c],l=a[u],f;(f=t[s])[o=bisect(f,l)]!==l&&f.splice(o,0,l);(f=t[l])[o=bisect(f,s)]!==s&&f.splice(o,0,s)}return t};var untransform=function(e){if(null==e)return identity;var r,t,n=e.scale[0],o=e.scale[1],a=e.translate[0],i=e.translate[1];return function(e,c){c||(r=t=0);var u=2,s=e.length,l=new Array(s),f=Math.round((e[0]-a)/n),h=Math.round((e[1]-i)/o);l[0]=f-r,r=f;l[1]=h-t,t=h;while(u<s)l[u]=e[u],++u;return l}};var quantize=function(e,r){if(e.transform)throw new Error("already quantized");if(r&&r.scale)u=e.bbox;else{if(!((i=Math.floor(r))>=2))throw new Error("n must be â‰¥2");u=e.bbox||bbox(e);var t=u[0],n=u[1],o=u[2],a=u[3],i;r={scale:[o-t?(o-t)/(i-1):1,a-n?(a-n)/(i-1):1],translate:[t,n]}}var c=untransform(r),u,s,l=e.objects,f={};function quantizePoint(e){return c(e)}function quantizeGeometry(e){var r;switch(e.type){case"GeometryCollection":r={type:"GeometryCollection",geometries:e.geometries.map(quantizeGeometry)};break;case"Point":r={type:"Point",coordinates:quantizePoint(e.coordinates)};break;case"MultiPoint":r={type:"MultiPoint",coordinates:e.coordinates.map(quantizePoint)};break;default:return e}null!=e.id&&(r.id=e.id);null!=e.bbox&&(r.bbox=e.bbox);null!=e.properties&&(r.properties=e.properties);return r}function quantizeArc(e){var r=0,t=1,n=e.length,o,a=new Array(n);a[0]=c(e[0],0);while(++r<n)((o=c(e[r],r))[0]||o[1])&&(a[t++]=o);1===t&&(a[t++]=[0,0]);a.length=t;return a}for(s in l)f[s]=quantizeGeometry(l[s]);return{type:"Topology",bbox:u,transform:r,objects:f,arcs:e.arcs.map(quantizeArc)}};r.bbox=bbox;r.feature=feature;r.mesh=mesh;r.meshArcs=meshArcs;r.merge=merge;r.mergeArcs=mergeArcs;r.neighbors=neighbors;r.quantize=quantize;r.transform=transform;r.untransform=untransform;Object.defineProperty(r,"__esModule",{value:true})}));const t=r.bbox,n=r.feature,o=r.mesh,a=r.meshArcs,i=r.merge,c=r.mergeArcs,u=r.neighbors,s=r.quantize,l=r.transform,f=r.untransform,h=r.__esModule;export default r;export{h as __esModule,t as bbox,n as feature,i as merge,c as mergeArcs,o as mesh,a as meshArcs,u as neighbors,s as quantize,l as transform,f as untransform};

